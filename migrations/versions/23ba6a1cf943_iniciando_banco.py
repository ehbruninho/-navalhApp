"""iniciando banco

Revision ID: 23ba6a1cf943
Revises: 
Create Date: 2025-06-22 23:10:59.331095

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '23ba6a1cf943'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('region',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('postal_code', sa.String(length=10), nullable=False),
    sa.Column('uf', sa.String(length=2), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('services',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('doc_register', sa.String(length=14), nullable=True),
    sa.Column('mobile_number', sa.String(length=15), nullable=True),
    sa.Column('foto', sa.String(length=255), nullable=True),
    sa.Column('verification_code', sa.String(length=100), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('type_user', sa.Enum('Barber', 'Client', 'Administrator'), nullable=False),
    sa.Column('create_att', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doc_register'),
    sa.UniqueConstraint('email')
    )
    op.create_table('local',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('number_address', sa.Integer(), nullable=True),
    sa.Column('district', sa.String(length=255), nullable=True),
    sa.Column('id_region', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_region'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('barbers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_users', sa.Integer(), nullable=True),
    sa.Column('id_local', sa.Integer(), nullable=True),
    sa.Column('bio', sa.String(length=255), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_local'], ['local.id'], ),
    sa.ForeignKeyConstraint(['id_users'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('barber_service',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('barber_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['barber_id'], ['barbers.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_slot',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('barber_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['barber_id'], ['barbers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('barber_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time_slot_id', sa.Integer(), nullable=False),
    sa.Column('payment_status', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('Confirmado', 'Cancelado', 'Reservado'), nullable=False),
    sa.ForeignKeyConstraint(['barber_id'], ['barbers.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['barber_service.id'], ),
    sa.ForeignKeyConstraint(['time_slot_id'], ['time_slot.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('payment_method', sa.Enum('Cartão de Crédito', 'Pix', 'Cartão de Débito', 'Dinheiro'), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    op.drop_table('appointments')
    op.drop_table('time_slot')
    op.drop_table('barber_service')
    op.drop_table('barbers')
    op.drop_table('local')
    op.drop_table('users')
    op.drop_table('services')
    op.drop_table('region')
    # ### end Alembic commands ###
